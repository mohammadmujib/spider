Question Name: Even Distribution
Problem Statement

Antonio wants to gift N pairs of integers to his girlfriend Teena.
For this he went to a nearby arrays shop to buy an array consisting of 2*N integers.
Teena likes a pair of integers (a,b) if and only the sum of two integers is even, i.e. a+b when divided by 2, 
leaves remainder 0.
Antonio does not like wasting things. 
So before buying the array he wants to make sure that he can form N pairs using the elements of the 
given array such that
Teena likes all the N pairs.
For this he asked his coder friend for help. Help him.

Input Format
First line of input contains T denoting the number of test cases.
First line of every test case contains a single integer denoting N.
Next line of input contains 2*N space separated integers denoting the elements of the array Antonio is buying.

Output Format
For every test case print “YES”, if Antonio can form N pairs using the elements of the given array such that Teena likes all the N pairs, else print “NO”.

Constraints
1<=T<=5
1<=N<=105
1<=Ai<=109

Sample Input 1
2
2
2 4 1 3
2
10 12 2 3

Sample Output 1
YES
NO

Explanation of Sample 1
In test case 1 :
Antonio can form the pairs as : (1st element, 2nd element), (3rd element, 4th element)
In test case 2:
It's not possible for Antonio to form 2 pairs such that Teena likes both the pairs.

Things to Note for the Candidate:
-----------------------------------------------------------------------------------------------

answer :
function abc(A,n){
    let even=0;
    let odd=0;
     let l=2*n
  for(let i=0;i<l;i++){
    if(A[i]%2===0){
        even++
    }else{
        odd++
    }
  }
//   console.log(even,odd)
  if(odd%2 !=0){
    odd=odd-1
  }
  if(even % 2 != 0){
    even = even -1 ;
  }
//   console.log(even,odd)
  let ans=(odd+even)/2 ;
//   console.log(ans)
  if(ans===n){
    return "YES"
  }else{
    return "NO"
  }
 }
let tc = parseInt(readline());
while(tc--){
	let n = parseInt(readline());
	let arr =[];
    arr = readline().split(" ").map(Number);
  console.log(abc(arr,n))

}



---------------------------------------------------------------------------------------------
DIVISIBILITY BY K
Problem Statement



Amy has an array A of N integers.
In one operation she can select a non-empty subsequence of array A and increase or decrease each 
element of the array by 1.
Find the minimum number of operations she needs to make each element of the array A, divisible by K.


You are given T independent test cases.

Constraints
1 <= T <= 10
1 <= N <= 105
2 <= K <= 105
0 <= Ai <= 109
All input values are integers.

Input Format
First-line contains T.
First line of each test case consists of two space separated integers N and K.
Second line of each test case has N space separated integers denoting the array A.

Output Format
Print in a newline for each test case a single integer denoting the minimum number of operations she needs to make each element of the array divisible by K.
Sample Input 1
1
4 3

4 3 6 2





Sample Output 1



2


4 7 3 6 2 5
3 6 3 6 3 6
K = 3
count = 4

4 7 3 6 2 5

3 6
K = 4
count = 2

2 = 4
2 = 2 = 4
2 + 1 + 1 = 4

2 11 8 3 5 9  8 15 19 21
4 12 8 4 4 8  8 16 20 20
2 1  0 1 -1-1 0 1  1  -1
11 3 15 19 = incre 1
12 4 16 20 count = 1

5 9 21
4 8 20

changesMade = 2 + 1 + 1 = 4


subseq = [2 11 8 5]
         [3 12 9 6]
	
subseq = [8]
         [9]
count = 2













Explanation of Sample 1



She selects the subsequence, {A1, A3} and decrease each by 1. So, A = [3, 3, 5, 2]

Then, she selects the subsequence, {A3, A4} and increase each by 1. So, A = [3, 3, 6, 3]

Now each element of the array is divisible by 3.





